/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        quick_tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
            layers = <0 1>;
        };

        to_func {
            bindings = <&mo 0>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W           &kp E        &kp R             &kp T          &kp Y        &kp U            &kp I        &kp O            &kp P                       &none
&none  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G          &kp H        &mt RSHFT J      &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SINGLE_QUOTE  &none
&none  &kp Z           &kp X           &kp C        &kp V             &kp B          &kp N        &kp M            &kp COMMA    &kp DOT          &kp FSLH                    &none
                                       &none        &lt 3 ESCAPE      &lt 2 SPACE    &lt 3 ENTER  &lt 3 BACKSPACE  &none
            >;
        };

        dvorak {
            bindings = <
&none  &kp PERIOD      &kp LESS_THAN   &kp PERIOD   &kp P             &kp Y          &kp F        &kp G            &kp C        &kp R            &kp L            &none
&none  &mt LEFT_GUI A  &mt LEFT_ALT O  &mt LCTRL E  &mt LEFT_SHIFT U  &kp I          &kp D        &mt RSHFT H      &mt RCTRL T  &mt RIGHT_ALT N  &mt RIGHT_GUI S  &none
&none  &kp SLASH       &kp Q           &kp J        &kp K             &kp X          &kp B        &kp M            &kp W        &kp V            &kp Z            &none
                                       &none        &lt 3 ESCAPE      &lt 2 SPACE    &lt 3 ENTER  &lt 3 BACKSPACE  &none
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none         &none         &none      &none           &none     &kp K_REDO  &kp K_PASTE  &kp K_COPY     &kp K_CUT  &kp K_UNDO  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none     &kp LEFT    &kp DOWN     &kp UP         &kp RIGHT  &kp CAPS    &none
&none  &none         &none         &none      &none           &none     &kp INSERT  &kp HOME     &kp PAGE_DOWN  &kp PG_UP  &kp END     &none
                                   &none      &none           &trans    &kp TAB     &kp DEL      &none
            >;
        };

        util {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none           &none         &none         &none       &kp LC(PRINTSCREEN)    &none   &none       &none      &none     &none          &none
&none  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &kp SCROLLLOCK         &none   &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RIGHT_GUI  &none
&none  &studio_unlock  &none         &none         &none       &kp C_PAUSE            &none   &none       &none      &none     &none          &none
                                     &none         &none       &kp TAB                &trans  &none       &none
            >;
        };

        num {
            bindings = <
&none  &none         &none         &none      &none           &none    &kp LEFT_BRACKET  &kp N7     &kp N8  &kp N9        &kp RIGHT_BRACKET  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp SEMICOLON     &kp N4     &kp N5  &kp NUMBER_6  &kp EQUAL          &none
&none  &none         &none         &none      &none           &none    &kp GRAVE         &kp N1     &kp N2  &kp N3        &kp BACKSLASH      &none
                                   &none      &trans          &none    &kp N0            &kp MINUS  &none
            >;
        };

        func {
            bindings = <
&none  &none         &none         &none      &none           &none     &none   &kp F7  &kp F8  &kp F9  &kp F12  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &to 0     &to 1   &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &none         &none         &none      &none           &none     &none   &kp F1  &kp F2  &kp F3  &kp F10  &none
                                   &none      &none           &trans    &trans  &none   &none
            >;
        };
    };
};
